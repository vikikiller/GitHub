Краткая информация о базе данных "Компьютерная фирма":
Схема БД состоит из четырех таблиц:
Product(maker, model, type)
PC(code, model, speed, ram, hd, cd, price)
Laptop(code, model, speed, ram, hd, price, screen)
Printer(code, model, color, type, price)
Таблица Product представляет производителя (maker), номер модели (model) и тип ('PC' - ПК, 'Laptop' - ПК-блокнот или 'Printer' - принтер). Предполагается, что номера моделей в таблице Product уникальны для всех производителей и типов продуктов. В таблице PC для каждого ПК, однозначно определяемого уникальным кодом – code, указаны модель – model (внешний ключ к таблице Product), скорость - speed (процессора в мегагерцах), объем памяти - ram (в мегабайтах), размер диска - hd (в гигабайтах), скорость считывающего устройства - cd (например, '4x') и цена - price (в долларах). Таблица Laptop аналогична таблице РС за исключением того, что вместо скорости CD содержит размер экрана -screen (в дюймах). В таблице Printer для каждой модели принтера указывается, является ли он цветным - color ('y', если цветной), тип принтера - type (лазерный – 'Laser', струйный – 'Jet' или матричный – 'Matrix') и цена - price.

Задание 1: 
Найдите номер модели, скорость и размер жесткого диска для всех ПК стоимостью менее 500 дол. Вывести: model, speed и hd:
SELECT model, speed, hd FROM PC
WHERE price < 500;

Задание 2:
Найдите производителей принтеров. Вывести: maker
SELECT DISTINCT maker 
FROM product 
WHERE type = 'printer';

Задание 3: 
Найдите номер модели, объем памяти и размеры экранов ПК-блокнотов, цена которых превышает 1000 дол:
SELECT model, ram, screen 
FROM Laptop
WHERE price > 1000;

Задание 4:
Найдите все записи таблицы Printer для цветных принтеров:
SELECT * FROM Printer
WHERE color = 'y';

Задание 5:
Найдите номер модели, скорость и размер жесткого диска ПК, имеющих 12x или 24x CD и цену менее 600 дол:
SELECT model, speed, hd 
FROM PC
WHERE price < 600 AND ( cd = '12x' OR cd = '24x');

Задание 6:
Для каждого производителя, выпускающего ПК-блокноты c объёмом жесткого диска не менее 10 Гбайт, найти скорости таких ПК-блокнотов. Вывод: производитель, скорость.
SELECT DISTINCT p.maker, l.speed
FROM Laptop l 
JOIN product p ON p.model = l.model
WHERE hd >= 10;

Задание 7:
Найдите номера моделей и цены всех имеющихся в продаже продуктов (любого типа) производителя B (латинская буква):
SELECT pc.model, price FROM pc JOIN product ON pc.model = product.model WHERE maker = 'B'
UNION
SELECT laptop.model, price FROM laptop JOIN product ON laptop.model = product.model WHERE maker = 'B'
UNION
SELECT printer.model, price FROM printer JOIN product ON printer.model = product.model WHERE maker = 'B';

Задание 8:
Найдите производителя, выпускающего ПК, но не ПК-блокноты.
SELECT maker FROM product 
WHERE type = 'pc' AND maker NOT IN (SELECT maker FROM product WHERE type = 'laptop') 
GROUP BY maker;

Задание 9:
Найдите производителей ПК с процессором не менее 450 Мгц. Вывести: Maker.
SELECT maker FROM product join (SELECT * FROM pc WHERE speed >= 450)this_table_1 ON product.model = this_table_1.model 
GROUP BY maker;

Задание 10:
Найдите модели принтеров, имеющих самую высокую цену. Вывести: model, price.
SELECT DISTINCT model, price
FROM printer
WHERE price = (SELECT MAX(price) 
FROM printer);

Задание 11:
Найдите среднюю скорость ПК.
SELECT AVG(speed) as medium_speed
FROM pc;

Задание 12:
Найдите среднюю скорость ПК-блокнотов, цена которых превышает 1000 дол.
SELECT AVG(speed) AS medium_speed
FROM laptop
WHERE price > 1000;

Задание 13:
Найдите среднюю скорость ПК, выпущенных производителем A.
SELECT AVG(speed) AS speed_A
FROM PC
WHERE model IN(SELECT model
FROM Product
WHERE maker = 'A');

Задание 14:
Найдите размеры жестких дисков, совпадающих у двух и более PC. Вывести: HD.
SELECT hd FROM pc 
GROUP BY hd
HAVING COUNT(*) >= 2;

Задание 15:
Найдите пары моделей PC, имеющих одинаковые скорость и RAM. В результате каждая пара указывается только один раз, т.е. (i,j), но не (j,i), Порядок вывода: модель с большим номером, модель с меньшим номером, скорость и RAM.
SELECT DISTINCT pc_1.model, pc_2.model, pc_1.speed, pc_1.ram 
FROM pc pc_1, pc pc_2 
WHERE pc_1.speed = pc_2.speed AND pc_1.ram = pc_2.ram AND pc_1.model > pc_2.model;

Задание 16:
Найдите модели ПК-блокнотов, скорость которых меньше скорости каждого из ПК.
Вывести: type, model, speed
SELECT DISTINCT product.type, laptop.model, laptop.speed
FROM product, laptop
WHERE product.type = 'laptop' AND laptop.speed < ALL(SELECT speed FROM PC);

Задание 17:
Найдите производителей самых дешевых цветных принтеров. Вывести: maker, price
SELECT maker, price
FROM printer JOIN product ON product.model = printer.model
WHERE price = (SELECT MIN(price) FROM printer WHERE color = 'y') AND color = 'y' GROUP BY maker, price;

Задание 18:
Для каждого производителя, имеющего модели в таблице Laptop, найдите средний размер экрана выпускаемых им ПК-блокнотов.
Вывести: maker, средний размер экрана.
SELECT maker, AVG(screen) AS Avg_screen FROM laptop JOIN product ON laptop.model = product.model GROUP BY maker;

Задание 19:
Найдите производителей, выпускающих по меньшей мере три различных модели ПК. Вывести: Maker, число моделей ПК.
SELECT maker, COUNT(model) model FROM product WHERE type = 'pc'
GROUP BY maker 
HAVING COUNT(model) >= 3;

Задание 20:
Найдите максимальную цену ПК, выпускаемых каждым производителем, у которого есть модели в таблице PC.
Вывести: maker, максимальная цена.
SELECT maker, MAX(price) AS Max_price FROM product JOIN pc ON product.model = pc.model  
WHERE type = 'pc' 
GROUP BY maker;

Задание 21:
Для каждого значения скорости ПК, превышающего 600 МГц, определите среднюю цену ПК с такой же скоростью. Вывести: speed, средняя цена.
SELECT speed , AVG(price) AS Avg_price FROM pc 
WHERE speed > 600 
GROUP BY speed;

Задание 22:
Найдите производителей, которые производили бы как ПК со скоростью не менее 750 МГц, так и ПК-блокноты со скоростью не менее 750 МГц. Вывести: Maker
SELECT maker FROM product JOIN pc ON product.model = pc.model 
WHERE speed >= 750
INTERSECT
SELECT maker FROM product JOIN laptop ON product.model = laptop.model 
WHERE speed >= 750;

Задание 23:
Перечислите номера моделей любых типов, имеющих самую высокую цену по всей имеющейся в базе данных продукции.
SELECT model, price FROM pc
UNION 
SELECT model, price FROM laptop
UNION 
(SELECT model, price FROM printer)table WHERE price = (SELECT MAX(price) FROM (SELECT model, price FROM pc UNION  SELECT model, price FROM laptop UNION SELECT model, price FROM printer)table2)

Задание 24:
Найдите производителей принтеров, которые производят ПК с наименьшим объемом RAM и с самым быстрым процессором среди всех ПК, имеющих наименьший объем RAM. Вывести: Maker.
SELECT DISTINCT maker FROM pc JOIN product ON product.model = pc.model
WHERE maker IN( SELECT DISTINCT maker FROM product WHERE type = 'printer') AND speed = (SELECT MAX(speed) FROM pc WHERE ram = (SELECT MIN(ram) FROM pc)) AND ram = (SELECT MIN(ram) FROM pc);

Задание 25:
Найдите среднюю цену ПК и ПК-блокнотов, выпущенных производителем A (латинская буква). Вывести: одна общая средняя цена.
SELECT SUM(prices)/SUM(models) FROM(
SELECT COUNT(pc.model) models, SUM(price) prices FROM pc JOIN product ON pc.model = product.model WHERE maker = 'A'
UNION 
SELECT COUNT(laptop.model), SUM(price) FROM laptop JOIN product ON laptop.model = product.model WHERE maker = 'A') table_1;

Задание 26:
Найдите средний размер диска ПК каждого из тех производителей, которые выпускают и принтеры. Вывести: maker, средний размер HD.
SELECT  maker, AVG(hd) AS Avg_hd FROM product JOIN pc ON product.model = pc.model WHERE maker IN (SELECT maker FROM product WHERE type = 'printer')
GROUP BY maker;

Задание 27:
Используя таблицу Product, определить количество производителей, выпускающих по одной модели.
SELECT COUNT(Maker) AS qnty
FROM (SELECT maker FROM product GROUP BY maker HAVING COUNT(*) = 1)
table_1;

Краткая информация о базе данных "Корабли":
Рассматривается БД кораблей, участвовавших во второй мировой войне. Имеются следующие отношения:
Classes (class, type, country, numGuns, bore, displacement)
Ships (name, class, launched)
Battles (name, date)
Outcomes (ship, battle, result)
Корабли в «классах» построены по одному и тому же проекту, и классу присваивается либо имя первого корабля, построенного по данному проекту, либо названию класса дается имя проекта, которое не совпадает ни с одним из кораблей в БД. Корабль, давший название классу, называется головным.
Отношение Classes содержит имя класса, тип (bb для боевого (линейного) корабля или bc для боевого крейсера), страну, в которой построен корабль, число главных орудий, калибр орудий (диаметр ствола орудия в дюймах) и водоизмещение ( вес в тоннах). В отношении Ships записаны название корабля, имя его класса и год спуска на воду. В отношение Battles включены название и дата битвы, в которой участвовали корабли, а в отношении Outcomes – результат участия данного корабля в битве (потоплен-sunk, поврежден - damaged или невредим - OK).
Замечания. 1) В отношение Outcomes могут входить корабли, отсутствующие в отношении Ships. 2) Потопленный корабль в последующих битвах участия не принимает.

Задание 1:
Найдите класс, имя и страну для кораблей из таблицы Ships, имеющих не менее 10 орудий:
SELECT Ships.class, Ships.name, country
FROM Ships JOIN(SELECT * FROM classes WHERE numGuns >= 10)this_table_1 ON Ships.class = this_table_1.class;


Краткая информация о базе данных "Фирма вторсырья":
Фирма имеет несколько пунктов приема вторсырья. Каждый пункт получает деньги для их выдачи сдатчикам вторсырья. Сведения о получении денег на пунктах приема записываются в таблицу:
Income_o(point, date, inc)
Первичным ключом является (point, date). При этом в столбец date записывается только дата (без времени), т.е. прием денег (inc) на каждом пункте производится не чаще одного раза в день. Сведения о выдаче денег сдатчикам вторсырья записываются в таблицу:
Outcome_o(point, date, out)
В этой таблице также первичный ключ (point, date) гарантирует отчетность каждого пункта о выданных деньгах (out) не чаще одного раза в день.
В случае, когда приход и расход денег может фиксироваться несколько раз в день, используется другая схема с таблицами, имеющими первичный ключ code:
Income(code, point, date, inc)
Outcome(code, point, date, out)
Здесь также значения столбца date не содержат времени.

Задание 1:
В предположении, что приход и расход денег на каждом пункте приема фиксируется не чаще одного раза в день [т.е. первичный ключ (пункт, дата)], написать запрос с выходными данными (пункт, дата, приход, расход). Использовать таблицы Income_o и Outcome_o.
SELECT income_o.point, income_o.[date], inc, out FROM income_o LEFT JOIN outcome_o ON outcome_o.point = income_o.point AND outcome_o.[date] = income_o.[date]
UNION 
SELECT outcome_o.point, outcome_o.[date], inc, out FROM income_o RIGHT JOIN outcome_o ON outcome_o.point = income_o.point AND outcome_o.[date] = income_o.[date]
